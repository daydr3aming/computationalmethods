#include "Automaton.h"
#include "State.h"
#include <fstream>
#include <iostream>
#include <stdlib.h>
using namespace std;

class Archivo {
public:
  Archivo(string archivo);
  // Función principal, lee un archivo llamado "aritmetica.txt"
  void lexerAritmetico(string archivo);

private:
  string archivo;
};

Archivo::Archivo(string _archivo) { 
  archivo = _archivo;
  }

void Archivo::lexerAritmetico(string archivo) {

  // Declaracion del estado inicial.
  State Inicial(false, false, "Inicial");
  // Esta lista es la declaración de todos los nodos del DFA. 
  // Así mismo, este es el alfabeto. E = {Variable, =, Entero, *, ( ,),/,.,+,-}
  State Variable(true, false, "Variable");
  State Asignacion(true, false, "Asignacion");
  State Entero(true, false, "Entero");
  State Multiplicacion(true, false, "Multiplicacion");
  State pOpen(true, false, "Parentesis que abre");
  State pClose(true, false, "Parentesis que cierra");
  State Division(true, false, "Division");
  State Real(true, false, "Real");
  State Death(false, true, "Death");
  State Suma(true, false, "Suma");
  State Resta(true, false, "Resta");

  // Esta es una lista de todas las transiciones de los nodos. Como es un DFA, todo el alfabeto tiene que
  // salir de cada uno de los nodos.
  
  Inicial.addTransition("0", Entero);
  Inicial.addTransition("1", Entero);
  Inicial.addTransition("2", Entero);
  Inicial.addTransition("3", Entero);
  Inicial.addTransition("4", Entero);
  Inicial.addTransition("5", Entero);
  Inicial.addTransition("6", Entero);
  Inicial.addTransition("7", Entero);
  Inicial.addTransition("8", Entero);
  Inicial.addTransition("9", Entero);
  Inicial.addTransition("a", Variable);
  Inicial.addTransition("b", Variable);
  Inicial.addTransition("c", Variable);
  Inicial.addTransition("d", Variable);
  Inicial.addTransition("e", Variable);
  Inicial.addTransition("f", Variable);
  Inicial.addTransition("g", Variable);
  Inicial.addTransition("h", Variable);
  Inicial.addTransition("i", Variable);
  Inicial.addTransition("j", Variable);
  Inicial.addTransition("k", Variable);
  Inicial.addTransition("l", Variable);
  Inicial.addTransition("m", Variable);
  Inicial.addTransition("n", Variable);
  Inicial.addTransition("o", Variable);
  Inicial.addTransition("p", Variable);
  Inicial.addTransition("q", Variable);
  Inicial.addTransition("r", Variable);
  Inicial.addTransition("s", Variable);
  Inicial.addTransition("t", Variable);
  Inicial.addTransition("u", Variable);
  Inicial.addTransition("v", Variable);
  Inicial.addTransition("w", Variable);
  Inicial.addTransition("x", Variable);
  Inicial.addTransition("y", Variable);
  Inicial.addTransition("z", Variable);
  Inicial.addTransition("(", pOpen);
  Inicial.addTransition(")", pClose);
  Inicial.addTransition("=", Asignacion);
  Inicial.addTransition("/", Division);
  Inicial.addTransition("*", Multiplicacion);
  Inicial.addTransition("+", Suma);
  Inicial.addTransition("-", Resta);
  Inicial.addTransition(".", Death);
  Inicial.addTransition(".", Death);
  Inicial.addTransition(" ", Inicial);

  Variable.addTransition("a", Variable);
  Variable.addTransition("b", Variable);
  Variable.addTransition("c", Variable);
  Variable.addTransition("d", Variable);
  Variable.addTransition("e", Variable);
  Variable.addTransition("f", Variable);
  Variable.addTransition("g", Variable);
  Variable.addTransition("h", Variable);
  Variable.addTransition("i", Variable);
  Variable.addTransition("j", Variable);
  Variable.addTransition("k", Variable);
  Variable.addTransition("l", Variable);
  Variable.addTransition("m", Variable);
  Variable.addTransition("n", Variable);
  Variable.addTransition("o", Variable);
  Variable.addTransition("p", Variable);
  Variable.addTransition("q", Variable);
  Variable.addTransition("r", Variable);
  Variable.addTransition("s", Variable);
  Variable.addTransition("t", Variable);
  Variable.addTransition("u", Variable);
  Variable.addTransition("v", Variable);
  Variable.addTransition("w", Variable);
  Variable.addTransition("x", Variable);
  Variable.addTransition("y", Variable);
  Variable.addTransition("z", Variable);
  Variable.addTransition("0", Entero);
  Variable.addTransition("1", Entero);
  Variable.addTransition("2", Entero);
  Variable.addTransition("3", Entero);
  Variable.addTransition("4", Entero);
  Variable.addTransition("5", Entero);
  Variable.addTransition("6", Entero);
  Variable.addTransition("7", Entero);
  Variable.addTransition("8", Entero);
  Variable.addTransition("9", Entero);
  Variable.addTransition("(", pOpen);
  Variable.addTransition(")", pClose);
  Variable.addTransition("=", Asignacion);
  Variable.addTransition("/", Division);
  Variable.addTransition("*", Multiplicacion);
  Variable.addTransition("+", Suma);
  Variable.addTransition("-", Resta);
  Variable.addTransition(".", Death);
  Variable.addTransition(" ", Inicial);

  Entero.addTransition("0", Entero);
  Entero.addTransition("1", Entero);
  Entero.addTransition("2", Entero);
  Entero.addTransition("3", Entero);
  Entero.addTransition("4", Entero);
  Entero.addTransition("5", Entero);
  Entero.addTransition("6", Entero);
  Entero.addTransition("7", Entero);
  Entero.addTransition("8", Entero);
  Entero.addTransition("9", Entero);
  Entero.addTransition("a", Variable);
  Entero.addTransition("b", Variable);
  Entero.addTransition("c", Variable);
  Entero.addTransition("d", Variable);
  Entero.addTransition("e", Variable);
  Entero.addTransition("f", Variable);
  Entero.addTransition("g", Variable);
  Entero.addTransition("h", Variable);
  Entero.addTransition("i", Variable);
  Entero.addTransition("j", Variable);
  Entero.addTransition("k", Variable);
  Entero.addTransition("l", Variable);
  Entero.addTransition("m", Variable);
  Entero.addTransition("n", Variable);
  Entero.addTransition("o", Variable);
  Entero.addTransition("p", Variable);
  Entero.addTransition("q", Variable);
  Entero.addTransition("r", Variable);
  Entero.addTransition("s", Variable);
  Entero.addTransition("t", Variable);
  Entero.addTransition("u", Variable);
  Entero.addTransition("v", Variable);
  Entero.addTransition("w", Variable);
  Entero.addTransition("x", Variable);
  Entero.addTransition("y", Variable);
  Entero.addTransition("z", Variable);
  Entero.addTransition("(", pOpen);
  Entero.addTransition(")", pClose);
  Entero.addTransition("=", Asignacion);
  Entero.addTransition("/", Division);
  Entero.addTransition("*", Multiplicacion);
  Entero.addTransition("+", Suma);
  Entero.addTransition("-", Resta);
  Entero.addTransition(".", Real);
  Entero.addTransition(" ", Inicial);

  Real.addTransition("0", Real);
  Real.addTransition("1", Real);
  Real.addTransition("2", Real);
  Real.addTransition("3", Real);
  Real.addTransition("4", Real);
  Real.addTransition("5", Real);
  Real.addTransition("6", Real);
  Real.addTransition("7", Real);
  Real.addTransition("8", Real);
  Real.addTransition("9", Real);
  Real.addTransition("a", Variable);
  Real.addTransition("b", Variable);
  Real.addTransition("c", Variable);
  Real.addTransition("d", Variable);
  Real.addTransition("e", Variable);
  Real.addTransition("f", Variable);
  Real.addTransition("g", Variable);
  Real.addTransition("h", Variable);
  Real.addTransition("i", Variable);
  Real.addTransition("j", Variable);
  Real.addTransition("k", Variable);
  Real.addTransition("l", Variable);
  Real.addTransition("m", Variable);
  Real.addTransition("n", Variable);
  Real.addTransition("o", Variable);
  Real.addTransition("p", Variable);
  Real.addTransition("q", Variable);
  Real.addTransition("r", Variable);
  Real.addTransition("s", Variable);
  Real.addTransition("t", Variable);
  Real.addTransition("u", Variable);
  Real.addTransition("v", Variable);
  Real.addTransition("w", Variable);
  Real.addTransition("x", Variable);
  Real.addTransition("y", Variable);
  Real.addTransition("z", Variable);
  Real.addTransition("(", pOpen);
  Real.addTransition(")", pClose);
  Real.addTransition("=", Asignacion);
  Real.addTransition("/", Division);
  Real.addTransition("*", Multiplicacion);
  Real.addTransition("+", Suma);
  Real.addTransition("-", Resta);
  Real.addTransition(".", Death);
  Real.addTransition(" ", Inicial);

  Asignacion.addTransition("0", Entero);
  Asignacion.addTransition("1", Entero);
  Asignacion.addTransition("2", Entero);
  Asignacion.addTransition("3", Entero);
  Asignacion.addTransition("4", Entero);
  Asignacion.addTransition("5", Entero);
  Asignacion.addTransition("6", Entero);
  Asignacion.addTransition("7", Entero);
  Asignacion.addTransition("8", Entero);
  Asignacion.addTransition("9", Entero);
  Asignacion.addTransition("a", Variable);
  Asignacion.addTransition("b", Variable);
  Asignacion.addTransition("c", Variable);
  Asignacion.addTransition("d", Variable);
  Asignacion.addTransition("e", Variable);
  Asignacion.addTransition("f", Variable);
  Asignacion.addTransition("g", Variable);
  Asignacion.addTransition("h", Variable);
  Asignacion.addTransition("i", Variable);
  Asignacion.addTransition("j", Variable);
  Asignacion.addTransition("k", Variable);
  Asignacion.addTransition("l", Variable);
  Asignacion.addTransition("m", Variable);
  Asignacion.addTransition("n", Variable);
  Asignacion.addTransition("o", Variable);
  Asignacion.addTransition("p", Variable);
  Asignacion.addTransition("q", Variable);
  Asignacion.addTransition("r", Variable);
  Asignacion.addTransition("s", Variable);
  Asignacion.addTransition("t", Variable);
  Asignacion.addTransition("u", Variable);
  Asignacion.addTransition("v", Variable);
  Asignacion.addTransition("w", Variable);
  Asignacion.addTransition("x", Variable);
  Asignacion.addTransition("y", Variable);
  Asignacion.addTransition("z", Variable);
  Asignacion.addTransition("(", pOpen);
  Asignacion.addTransition(")", pClose);
  Asignacion.addTransition("=", Asignacion);
  Asignacion.addTransition("/", Division);
  Asignacion.addTransition("*", Multiplicacion);
  Asignacion.addTransition("+", Suma);
  Asignacion.addTransition("-", Resta);
  Asignacion.addTransition(".", Death);
  Asignacion.addTransition(" ", Inicial);

  Multiplicacion.addTransition("0", Entero);
  Multiplicacion.addTransition("1", Entero);
  Multiplicacion.addTransition("2", Entero);
  Multiplicacion.addTransition("3", Entero);
  Multiplicacion.addTransition("4", Entero);
  Multiplicacion.addTransition("5", Entero);
  Multiplicacion.addTransition("6", Entero);
  Multiplicacion.addTransition("7", Entero);
  Multiplicacion.addTransition("8", Entero);
  Multiplicacion.addTransition("9", Entero);
  Multiplicacion.addTransition("a", Variable);
  Multiplicacion.addTransition("b", Variable);
  Multiplicacion.addTransition("c", Variable);
  Multiplicacion.addTransition("d", Variable);
  Multiplicacion.addTransition("e", Variable);
  Multiplicacion.addTransition("f", Variable);
  Multiplicacion.addTransition("g", Variable);
  Multiplicacion.addTransition("h", Variable);
  Multiplicacion.addTransition("i", Variable);
  Multiplicacion.addTransition("j", Variable);
  Multiplicacion.addTransition("k", Variable);
  Multiplicacion.addTransition("l", Variable);
  Multiplicacion.addTransition("m", Variable);
  Multiplicacion.addTransition("n", Variable);
  Multiplicacion.addTransition("o", Variable);
  Multiplicacion.addTransition("p", Variable);
  Multiplicacion.addTransition("q", Variable);
  Multiplicacion.addTransition("r", Variable);
  Multiplicacion.addTransition("s", Variable);
  Multiplicacion.addTransition("t", Variable);
  Multiplicacion.addTransition("u", Variable);
  Multiplicacion.addTransition("v", Variable);
  Multiplicacion.addTransition("w", Variable);
  Multiplicacion.addTransition("x", Variable);
  Multiplicacion.addTransition("y", Variable);
  Multiplicacion.addTransition("z", Variable);
  Multiplicacion.addTransition("(", pOpen);
  Multiplicacion.addTransition(")", pClose);
  Multiplicacion.addTransition("=", Asignacion);
  Multiplicacion.addTransition("/", Division);
  Multiplicacion.addTransition("*", Multiplicacion);
  Multiplicacion.addTransition("+", Suma);
  Multiplicacion.addTransition("-", Resta);
  Multiplicacion.addTransition(".", Death);
  Multiplicacion.addTransition(" ", Inicial);

  Division.addTransition("0", Entero);
  Division.addTransition("1", Entero);
  Division.addTransition("2", Entero);
  Division.addTransition("3", Entero);
  Division.addTransition("4", Entero);
  Division.addTransition("5", Entero);
  Division.addTransition("6", Entero);
  Division.addTransition("7", Entero);
  Division.addTransition("8", Entero);
  Division.addTransition("9", Entero);
  Division.addTransition("a", Variable);
  Division.addTransition("b", Variable);
  Division.addTransition("c", Variable);
  Division.addTransition("d", Variable);
  Division.addTransition("e", Variable);
  Division.addTransition("f", Variable);
  Division.addTransition("g", Variable);
  Division.addTransition("h", Variable);
  Division.addTransition("i", Variable);
  Division.addTransition("j", Variable);
  Division.addTransition("k", Variable);
  Division.addTransition("l", Variable);
  Division.addTransition("m", Variable);
  Division.addTransition("n", Variable);
  Division.addTransition("o", Variable);
  Division.addTransition("p", Variable);
  Division.addTransition("q", Variable);
  Division.addTransition("r", Variable);
  Division.addTransition("s", Variable);
  Division.addTransition("t", Variable);
  Division.addTransition("u", Variable);
  Division.addTransition("v", Variable);
  Division.addTransition("w", Variable);
  Division.addTransition("x", Variable);
  Division.addTransition("y", Variable);
  Division.addTransition("z", Variable);
  Division.addTransition("(", pOpen);
  Division.addTransition(")", pClose);
  Division.addTransition("=", Asignacion);
  Division.addTransition("/", Division);
  Division.addTransition("*", Multiplicacion);
  Division.addTransition("+", Suma);
  Division.addTransition("-", Resta);
  Division.addTransition(".", Death);
  Division.addTransition(" ", Inicial);

  Suma.addTransition("0", Entero);
  Suma.addTransition("1", Entero);
  Suma.addTransition("2", Entero);
  Suma.addTransition("3", Entero);
  Suma.addTransition("4", Entero);
  Suma.addTransition("5", Entero);
  Suma.addTransition("6", Entero);
  Suma.addTransition("7", Entero);
  Suma.addTransition("8", Entero);
  Suma.addTransition("9", Entero);
  Suma.addTransition("a", Variable);
  Suma.addTransition("b", Variable);
  Suma.addTransition("c", Variable);
  Suma.addTransition("d", Variable);
  Suma.addTransition("e", Variable);
  Suma.addTransition("f", Variable);
  Suma.addTransition("g", Variable);
  Suma.addTransition("h", Variable);
  Suma.addTransition("i", Variable);
  Suma.addTransition("j", Variable);
  Suma.addTransition("k", Variable);
  Suma.addTransition("l", Variable);
  Suma.addTransition("m", Variable);
  Suma.addTransition("n", Variable);
  Suma.addTransition("o", Variable);
  Suma.addTransition("p", Variable);
  Suma.addTransition("q", Variable);
  Suma.addTransition("r", Variable);
  Suma.addTransition("s", Variable);
  Suma.addTransition("t", Variable);
  Suma.addTransition("u", Variable);
  Suma.addTransition("v", Variable);
  Suma.addTransition("w", Variable);
  Suma.addTransition("x", Variable);
  Suma.addTransition("y", Variable);
  Suma.addTransition("z", Variable);
  Suma.addTransition("(", pOpen);
  Suma.addTransition(")", pClose);
  Suma.addTransition("=", Asignacion);
  Suma.addTransition("/", Division);
  Suma.addTransition("*", Multiplicacion);
  Suma.addTransition("+", Suma);
  Suma.addTransition("-", Resta);
  Suma.addTransition(".", Death);
  Suma.addTransition(" ", Inicial);


  Resta.addTransition("0", Entero);
  Resta.addTransition("1", Entero);
  Resta.addTransition("2", Entero);
  Resta.addTransition("3", Entero);
  Resta.addTransition("4", Entero);
  Resta.addTransition("5", Entero);
  Resta.addTransition("6", Entero);
  Resta.addTransition("7", Entero);
  Resta.addTransition("8", Entero);
  Resta.addTransition("9", Entero);
  Resta.addTransition("a", Variable);
  Resta.addTransition("b", Variable);
  Resta.addTransition("c", Variable);
  Resta.addTransition("d", Variable);
  Resta.addTransition("e", Variable);
  Resta.addTransition("f", Variable);
  Resta.addTransition("g", Variable);
  Resta.addTransition("h", Variable);
  Resta.addTransition("i", Variable);
  Resta.addTransition("j", Variable);
  Resta.addTransition("k", Variable);
  Resta.addTransition("l", Variable);
  Resta.addTransition("m", Variable);
  Resta.addTransition("n", Variable);
  Resta.addTransition("o", Variable);
  Resta.addTransition("p", Variable);
  Resta.addTransition("q", Variable);
  Resta.addTransition("r", Variable);
  Resta.addTransition("s", Variable);
  Resta.addTransition("t", Variable);
  Resta.addTransition("u", Variable);
  Resta.addTransition("v", Variable);
  Resta.addTransition("w", Variable);
  Resta.addTransition("x", Variable);
  Resta.addTransition("y", Variable);
  Resta.addTransition("z", Variable);
  Resta.addTransition("(", pOpen);
  Resta.addTransition(")", pClose);
  Resta.addTransition("=", Asignacion);
  Resta.addTransition("/", Division);
  Resta.addTransition("*", Multiplicacion);
  Resta.addTransition("+", Suma);
  Resta.addTransition("-", Resta);
  Resta.addTransition(".", Death);
  Resta.addTransition(" ", Inicial);

  pOpen.addTransition("0", Entero);
  pOpen.addTransition("1", Entero);
  pOpen.addTransition("2", Entero);
  pOpen.addTransition("3", Entero);
  pOpen.addTransition("4", Entero);
  pOpen.addTransition("5", Entero);
  pOpen.addTransition("6", Entero);
  pOpen.addTransition("7", Entero);
  pOpen.addTransition("8", Entero);
  pOpen.addTransition("9", Entero);
  pOpen.addTransition("a", Variable);
  pOpen.addTransition("b", Variable);
  pOpen.addTransition("c", Variable);
  pOpen.addTransition("d", Variable);
  pOpen.addTransition("e", Variable);
  pOpen.addTransition("f", Variable);
  pOpen.addTransition("g", Variable);
  pOpen.addTransition("h", Variable);
  pOpen.addTransition("i", Variable);
  pOpen.addTransition("j", Variable);
  pOpen.addTransition("k", Variable);
  pOpen.addTransition("l", Variable);
  pOpen.addTransition("m", Variable);
  pOpen.addTransition("n", Variable);
  pOpen.addTransition("o", Variable);
  pOpen.addTransition("p", Variable);
  pOpen.addTransition("q", Variable);
  pOpen.addTransition("r", Variable);
  pOpen.addTransition("s", Variable);
  pOpen.addTransition("t", Variable);
  pOpen.addTransition("u", Variable);
  pOpen.addTransition("v", Variable);
  pOpen.addTransition("w", Variable);
  pOpen.addTransition("x", Variable);
  pOpen.addTransition("y", Variable);
  pOpen.addTransition("z", Variable);
  pOpen.addTransition("(", pOpen);
  pOpen.addTransition(")", pClose);
  pOpen.addTransition("=", Asignacion);
  pOpen.addTransition("/", Division);
  pOpen.addTransition("*", Multiplicacion);
  pOpen.addTransition("+", Suma);
  pOpen.addTransition("-", Resta);
  pOpen.addTransition(".", Death);
  pOpen.addTransition(" ", Inicial);

  pClose.addTransition("0", Entero);
  pClose.addTransition("1", Entero);
  pClose.addTransition("2", Entero);
  pClose.addTransition("3", Entero);
  pClose.addTransition("4", Entero);
  pClose.addTransition("5", Entero);
  pClose.addTransition("6", Entero);
  pClose.addTransition("7", Entero);
  pClose.addTransition("8", Entero);
  pClose.addTransition("9", Entero);
  pClose.addTransition("a", Variable);
  pClose.addTransition("b", Variable);
  pClose.addTransition("c", Variable);
  pClose.addTransition("d", Variable);
  pClose.addTransition("e", Variable);
  pClose.addTransition("f", Variable);
  pClose.addTransition("g", Variable);
  pClose.addTransition("h", Variable);
  pClose.addTransition("i", Variable);
  pClose.addTransition("j", Variable);
  pClose.addTransition("k", Variable);
  pClose.addTransition("l", Variable);
  pClose.addTransition("m", Variable);
  pClose.addTransition("n", Variable);
  pClose.addTransition("o", Variable);
  pClose.addTransition("p", Variable);
  pClose.addTransition("q", Variable);
  pClose.addTransition("r", Variable);
  pClose.addTransition("s", Variable);
  pClose.addTransition("t", Variable);
  pClose.addTransition("u", Variable);
  pClose.addTransition("v", Variable);
  pClose.addTransition("w", Variable);
  pClose.addTransition("x", Variable);
  pClose.addTransition("y", Variable);
  pClose.addTransition("z", Variable);
  pClose.addTransition("(", pOpen);
  pClose.addTransition(")", pClose);
  pClose.addTransition("=", Asignacion);
  pClose.addTransition("/", Division);
  pClose.addTransition("*", Multiplicacion);
  pClose.addTransition("+", Suma);
  pClose.addTransition("-", Resta);
  pClose.addTransition(".", Death);
  pClose.addTransition(" ", Inicial);

  Death.addTransition("0", Death);
  Death.addTransition("1", Death);
  Death.addTransition("2", Death);
  Death.addTransition("3", Death);
  Death.addTransition("4", Death);
  Death.addTransition("5", Death);
  Death.addTransition("6", Death);
  Death.addTransition("7", Death);
  Death.addTransition("8", Death);
  Death.addTransition("9", Death);
  Death.addTransition("a", Death);
  Death.addTransition("b", Death);
  Death.addTransition("c", Death);
  Death.addTransition("d", Death);
  Death.addTransition("e", Death);
  Death.addTransition("f", Death);
  Death.addTransition("g", Death);
  Death.addTransition("h", Death);
  Death.addTransition("i", Death);
  Death.addTransition("j", Death);
  Death.addTransition("k", Death);
  Death.addTransition("l", Death);
  Death.addTransition("m", Death);
  Death.addTransition("n", Death);
  Death.addTransition("o", Death);
  Death.addTransition("p", Death);
  Death.addTransition("q", Death);
  Death.addTransition("r", Death);
  Death.addTransition("s", Death);
  Death.addTransition("t", Death);
  Death.addTransition("u", Death);
  Death.addTransition("v", Variable);
  Death.addTransition("w", Death);
  Death.addTransition("x", Death);
  Death.addTransition("y", Death);
  Death.addTransition("z", Death);
  Death.addTransition("(", Death);
  Death.addTransition(")", Death);
  Death.addTransition("=", Death);
  Death.addTransition("/", Death);
  Death.addTransition("*", Death);
  Death.addTransition("+", Death);
  Death.addTransition("-", Death);
  Death.addTransition(".", Death);
  Death.addTransition(" ", Inicial);
  // Declaracion de objeto Automaton

  Automaton Automaton(Inicial);

  string ecuacion;

  // Funcion que lee archivo y llama tokenAnalyzer.
  
  cout << "Token: " <<  "       Type: "  << endl;
  ifstream miArchivo("aritmetica.txt");
  while (getline(miArchivo, ecuacion)) {
    string word = ecuacion;
    Automaton.tokenAnalyzer(word);
  }
}
